{{- /*gotype: heckel.io/pcopy/server.webTemplateConfig*/ -}}
{{- $url := .Config.ServerAddr | expandServerAddr -}}
NAME
  pcopy - copy/paste across machines

USAGE:
  curl [-T FILE] [-d DATA] [-u:PASS] {{$url}}[/FILENAME][?s=1][&m=rw|ro][&t=DURATION][&f=text|json]

DESCRIPTION:
  This is is the curl-endpoint for pcopy, a tool to copy/paste across machines. You may use
  curl's -T option to PUT files, or -d option to POST data. If a FILENAME is passed, it will
  be used. If not, a random one will be picked. You may also pass the word "random" as a FILENAME
  to avoid curl's awkward file name logic when -T is used.

  To stream data without storing it on the server, you may pass the ?s=1 query parameter.
  The upload will then block until the download of the file begins.

  If this clipboard is password-protected, you must pass the password PASS using the -u
  option as -u:PASS. To avoid passing the password, you may use -ux and curl will ask for
  the password.

  Examples:
    curl -T hi.txt {{$url}}                   # Copy file hi.txt to {{$url}}/hi.txt (via PUT)
    curl -T hi.txt {{$url}}/random            # Copy file hi.txt and pick a random file name (via PUT)
    curl -d "a thing" {{$url}}/thing.txt      # Copy text "a thing" to "thing.txt" (via POST)
    curl -d howdy '{{$url}}?t=30m'            # Copy text "howdy" to a random file with a TTL of 30m
    cat go.log | curl -T- {{$url}}/go.log     # Copy text from STDIN to "go.log"
    curl -u:mypass -d hi {{$url}}             # Uses password "mypass" to copy text "hi"
    cat a.log | curl -T- "{{$url}}/cool?s=1"  # Stream to "cool", blocks until download begins

OPTIONS:
  Query params:
    ?s=1          stream data without storing on the server
    ?m=rw|ro      defines whether to set the file mode as read-write or read-only (default: {{index .Config.FileModesAllowed 0}}, allowed: {{stringsJoin .Config.FileModesAllowed ", "}})
    ?t=DURATION   time-to-live after which the file will be deleted (default: {{if .Config.FileExpireAfterDefault}}{{.Config.FileExpireAfterDefault | durationToHuman}}{{else}}never{{end}}, nontext-max: {{if .Config.FileExpireAfterNonTextMax}}{{.Config.FileExpireAfterNonTextMax | durationToHuman}}{{else}}never{{end}}, text-max: {{if .Config.FileExpireAfterTextMax}}{{.Config.FileExpireAfterTextMax | durationToHuman}}{{else}}never{{end}})
    ?f=text|json  output format for PUT/POSTs (default: text)
    ?a=PASS       password for the clipboard (if password-protected); alternative to -u :PASS (see below)

  Common curl options (see 'man curl' for more):
    -T FILE       uploads file FILE to the server
    -d DATA       uploads DATA to the server
    -u :PASS      use password PASS for basic auth against server; alternative to ?a=PASS (see above)

WEB UI:
  {{$url}}

LIMITS:
  Total clipboard size limit: {{if .Config.ClipboardSizeLimit}}{{.Config.ClipboardSizeLimit | bytesToHuman }}{{else}}no limit{{end}}
  Total number of files: {{if .Config.ClipboardCountLimit}} max. {{.Config.ClipboardCountLimit }} files{{else}}no limit{{end}}
  Per-file size limit: {{if .Config.FileSizeLimit}}{{.Config.FileSizeLimit | bytesToHuman }}{{else}}no limit{{end}}
  Per-file expiration limits: {{if .Config.FileExpireAfterTextMax}}{{.Config.FileExpireAfterTextMax | durationToHuman }}{{else}}never{{end}} if text, {{if .Config.FileExpireAfterNonTextMax}}{{.Config.FileExpireAfterNonTextMax | durationToHuman }}{{else}}never{{end}} otherwise
  Allowed file modes: {{stringsJoin .Config.FileModesAllowed ", "}}

To find out more about pcopy, check out https://heckel.io/pcopy.
