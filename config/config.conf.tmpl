{{- /*gotype: heckel.io/pcopy.Config*/ -}}
# pcopy config file

# URL or hostname/port of the pcopy server.
#
# If only a HOST is given, the address is expanded to https://HOST:2586.
# If a HOST and a PORT is given, the address is expanded to https://HOST:PORT.
# If a full URL is given (starting with https:// or http://), the address is left unchanged.
#
# For servers: This address is advertised to clients. The server will still come up if the server address / URL
# is incorrect, but generated links may be incorrect.
# 
# Format:    [http(s)://]HOST[:PORT]
# Default:   None
#
{{if .ServerAddr}}ServerAddr {{.ServerAddr}}{{else}}# ServerAddr{{end}}

# Address and port to use to bind the server (HTTPS and HTTP). To bind to all addresses, you may omit the address
# and only pass the port, e.g. :2586. If no protocol suffix (/https or /http) is provided, /https is assumed.
#
# This is a server-only option (pcopy serve). It has no effect for client commands.
#
# Format:  [ADDR]:PORT[/https|/http]
# Default: :2586
# Example: :443/https :80/http
#
{{if and (eq ":2586" .ListenHTTPS) (eq "" .ListenHTTP)}}# ListenAddr :2586/https{{else if and .ListenHTTPS .ListenHTTP}}ListenAddr {{.ListenHTTPS}}/https {{.ListenHTTP}}/http{{else if .ListenHTTPS}}ListenAddr {{.ListenHTTPS}}/https{{else if .ListenHTTP}}ListenAddr {{.ListenHTTP}}/http{{else}}# ListenAddr :2586/https{{end}}

# If a key is defined, clients need to auth whenever they want copy/paste values
# to the clipboard. A key is derived from a password and can be generated using
# the 'pcopy keygen' command.
#
# Format:  SALT:KEY (both base64 encoded)
# Default: None
#
{{if .Key}}Key {{encodeKey .Key}}{{else}}# Key{{end}}

# Path to the TLS certificate used for the HTTPS traffic. If not set, the config file path (with
# a .crt extension) is assumed to be the path to the certificate, e.g. server.crt (if the config
# file is server.conf).
#
# For servers: This certificate is served to clients.
# For clients: If a certificate is present, it is used as the only allowed certificate to communicate
#              with a server (cert pinning).
#
# Format:  /some/path/to/server.crt (PEM formatted)
# Default: Config path, but with .crt extension
#
{{if .CertFile}}CertFile {{.CertFile}}{{else}}# CertFile{{end}}

# Path to the private key for the matching certificate. If not set, the config file path (with
# a .key extension) is assumed to be the path to the private key, e.g. server.key (if the config
# file is server.conf).
#
# This is a server-only option (pcopy serve). It has no effect for client commands.
#
# Format:  /some/path/to/server.key (PEM formatted)
# Default: Config path, but with .key extension
#
{{if .KeyFile}}KeyFile {{.KeyFile}}{{else}}# KeyFile{{end}}

# Name of the clipboard as it is shown in the Web UI. This value is only used in the UI.
# Make sure it's not too long, or things may look ugly.
#
# This is a server-only option (pcopy serve). It has no effect for client commands.
#
# Format:  <string>
# Default: pcopy
#
{{if or (eq "pcopy" .ClipboardName) (not .ClipboardName)}}# ClipboardName pcopy{{else}}ClipboardName {{.ClipboardName}}{{end}}

# Path to the directory in which the clipboard resides. If not set, this defaults to
# the path /var/cache/pcopy.
#
# This is a server-only option (pcopy serve). It has no effect for client commands.
#
# Format:  /some/folder
# Default: /var/cache/pcopy
#
{{if or (eq "/var/cache/pcopy" .ClipboardDir) (not .ClipboardDir)}}# ClipboardDir /var/cache/pcopy{{else}}ClipboardDir {{.ClipboardDir}}{{end}}

# Maximum total size of the entire clipboard (sum of all files). Zero disables this setting.
#
# This is a server-only option (pcopy serve). It has no effect for client commands.
#
# Format:  <number>(GMKB)
# Default: 0 (disabled)
#
{{if .ClipboardSizeLimit}}ClipboardSizeLimit {{.ClipboardSizeLimit}}{{else}}# ClipboardSizeLimit 0{{end}}

# Maximum number of clipboard files. Zero disables this setting.
#
# This is a server-only option (pcopy serve). It has no effect for client commands.
#
# Format:  <number>
# Default: 0 (disabled)
#
{{if .ClipboardCountLimit}}ClipboardCountLimit {{.ClipboardCountLimit}}{{else}}# ClipboardCountLimit 0{{end}}

# Maximum size per uploaded clipboard file. Zero disables a max file size.
#
# This is a server-only option (pcopy serve). It has no effect for client commands.
#
# Format:  <number>(GMKB)
# Default: 0 (disabled)
#
{{if .FileSizeLimit}}FileSizeLimit {{.FileSizeLimit}}{{else}}# FileSizeLimit 0{{end}}

# Duration after which clipboard contents will be deleted unless they are updated before.
# The <default> setting is used when the client does not pass a TTL in the request,
# the value for <max> is used to define the maximum allowed TTL. To disable, set to 0.
#
# This is a server-only option (pcopy serve). It has no effect for client commands.
#
# Format:  <default>/<max> or <max/default>; both values have the format <number>(s|m|h|d|w|mo|y)
# Default: 7d
#
{{$fileExpireAfterStr := durationToHuman .FileExpireAfter -}}
{{$fileExpireAfterMaxStr := durationToHuman .FileExpireAfterMax -}}
{{if or (and (eq "7d" $fileExpireAfterStr) (eq "7d" $fileExpireAfterStr)) (and (not .FileExpireAfter) (not .FileExpireAfterMax))}}# FileExpireAfter 7d
{{- else if eq $fileExpireAfterStr $fileExpireAfterMaxStr}}FileExpireAfter {{$fileExpireAfterStr}}
{{- else}}FileExpireAfter {{$fileExpireAfterStr}}/{{$fileExpireAfterMaxStr}}{{end}}

# Modes that are allowed to be set by the client for uploaded files, read-write ("rw") and read-only ("ro).
# If both modes are set, the client can chose. If no mode is set by the client, the first mode is used as
# a default.
#
# If you are primarily running a clipboard, using "rw ro" as a default makes the most sense.
# If you are running a nopaste, setting "ro" makes the most sense.
#
# This is a server-only option (pcopy serve). It has no effect for client commands.
#
# Format:  rw|ro [rw|ro]
# Default: rw ro
#
{{$fileModesAllowedStr := stringsJoin .FileModesAllowed " " -}}
{{if or (eq "rw ro" $fileModesAllowedStr) (not .FileModesAllowed)}}# FileModesAllowed rw ro{{else}}FileModesAllowed {{$fileModesAllowedStr}}{{end}}
